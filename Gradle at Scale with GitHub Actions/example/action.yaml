name: 'Setup Gradle'
description: 'Configures Gradle for GitHub actions, caching state and generating a dependency graph via Dependency Submission.'

runs:
  using: composite
  steps:
    - run: echo "DEPENDENCY_GRAPH_REPORT_DIR=${{ runner.temp }}/setup-gradle" >> $GITHUB_ENV
      shell: bash
    - id: setup-gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        # Fixed parameters
        dependency-graph: ${{(github.event.repository != null && github.ref_name == github.event.repository.default_branch) && 'generate-and-submit' || 'disabled' }}

        # Customizable parameters
        gradle-version: ${{ inputs.gradle-version }}
        cache-disabled: ${{ inputs.cache-disabled }}
        cache-read-only: ${{ inputs.cache-read-only }}
        cache-write-only: ${{ inputs.cache-write-only }}
        cache-overwrite-existing: ${{ inputs.cache-overwrite-existing }}
        cache-encryption-key: ${{ inputs.cache-encryption-key }}
        gradle-home-cache-includes: ${{ inputs.gradle-home-cache-includes }}
        gradle-home-cache-excludes: ${{ inputs.gradle-home-cache-excludes }}
        gradle-home-cache-cleanup: ${{ inputs.gradle-home-cache-cleanup }}
        add-job-summary: ${{ inputs.add-job-summary }}
        add-job-summary-as-pr-comment: ${{ inputs.add-job-summary-as-pr-comment }}
        validate-wrappers: ${{ inputs.validate-wrappers }}

    - name: Register init script
      shell: bash
      run: echo "GRADLE_USER_HOME=$GITHUB_ACTION_PATH" >> $GITHUB_ENV

inputs:
  gradle-version:
    description: |
      Gradle version to use. If specified, this Gradle version will be downloaded, added to the PATH and used for invoking Gradle.
      If not provided, it is assumed that the project uses the Gradle Wrapper.
    required: false

  # Cache configuration
  cache-disabled:
    description: When 'true', all caching is disabled. No entries will be written to or read from the cache.
    required: false
    default: false

  cache-read-only:
    description: |
      When 'true', existing entries will be read from the cache but no entries will be written.
      By default this value is 'false' for workflows on the GitHub default branch and 'true' for workflows on other branches.
    required: false
    default: ${{ github.event.repository != null && github.ref_name != github.event.repository.default_branch }}

  cache-write-only:
    description: |
      When 'true', entries will not be restored from the cache but will be saved at the end of the Job. 
      Setting this to 'true' implies cache-read-only will be 'false'.
    required: false
    default: false

  cache-overwrite-existing:
    description: When 'true', a pre-existing Gradle User Home will not prevent the cache from being restored.
    required: false
    default: false

  cache-encryption-key:
    description: |
      A base64 encoded AES key used to encrypt the configuration-cache data. The key is exported as 'GRADLE_ENCRYPTION_KEY' for later steps. 
      A suitable key can be generated with `openssl rand -base64 16`.
      Configuration-cache data will not be saved/restored without an encryption key being provided.
    required: false

  gradle-home-cache-includes:
    description: Paths within Gradle User Home to cache.
    required: false
    default: |
      caches
      notifications

  gradle-home-cache-excludes:
    description: Paths within Gradle User Home to exclude from cache.
    required: false

  gradle-home-cache-cleanup:
    description: When 'true', the action will attempt to remove any stale/unused entries from the Gradle User Home prior to saving to the GitHub Actions cache.
    required: false
    default: false

  # Job summary configuration
  add-job-summary:
    description: Specifies when a Job Summary should be inluded in the action results. Valid values are 'never', 'always' (default), and 'on-failure'.
    required: false
    default: 'always'

  add-job-summary-as-pr-comment:
    description: Specifies when each Job Summary should be added as a PR comment. Valid values are 'never' (default), 'always', and 'on-failure'. No action will be taken if the workflow was not triggered from a pull request.
    required: false
    default: 'never'

  # Wrapper validation configuration
  validate-wrappers:
    description: |
      When 'true', the action will perform the 'wrapper-validation' action automatically.
      If the wrapper checksums are not valid, the action will fail.
    required: false
    default: false

outputs:
  dependency-graph-file:
    description: Path to the GitHub Dependency Graph snapshot file generated by a Gradle build. Note that this output applies to a Step executing Gradle, not to the `setup-gradle` Step itself.
    value: ${{ steps.setup-gradle.outputs.dependency-graph-file }}
  gradle-version:
    description: Version of Gradle that was setup by the action
    value: ${{ steps.setup-gradle.outputs.gradle-version }}